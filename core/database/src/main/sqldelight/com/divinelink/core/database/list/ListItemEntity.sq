CREATE TABLE ListItemEntity (
  id INTEGER NOT NULL,
  name TEXT NOT NULL,
  description TEXT NOT NULL,
  isPublic INTEGER NOT NULL,
  numberOfItems INTEGER NOT NULL,
  posterPath TEXT,
  backdropPath TEXT,
  accountId TEXT NOT NULL,
  updatedAt TEXT NOT NULL,
  itemIndex INTEGER NOT NULL,

  UNIQUE(accountId, itemIndex) ON CONFLICT REPLACE
);

-- Query to temporarily move items to negative indices
shiftItemsToNegative:
UPDATE ListItemEntity
SET itemIndex = -(itemIndex + 1)
WHERE accountId = ? AND itemIndex >= 0;

-- Query to flip negative indices back to positive (now shifted +1)
flipNegativeIndices:
UPDATE ListItemEntity
SET itemIndex = -itemIndex
WHERE accountId = ? AND itemIndex < 0;

insertListItem:
INSERT OR REPLACE INTO ListItemEntity(
  id,
  name,
  description,
  isPublic,
  numberOfItems,
  posterPath,
  backdropPath,
  accountId,
  updatedAt,
  itemIndex
)
VALUES ?;

fetchUserLists:
SELECT *
FROM ListItemEntity
WHERE accountId = :accountId
AND itemIndex >= :startIndex
AND itemIndex < :startIndex + :limit
ORDER BY itemIndex ASC;

updateListItem:
UPDATE ListItemEntity SET
  name = ?,
  description = ?,
  backdropPath = ?,
  isPublic = ?
WHERE id = ?;

increaseListItemCount:
UPDATE ListItemEntity SET
  numberOfItems = numberOfItems + 1
WHERE id = ?;

decreaseListItemCountBy:
UPDATE ListItemEntity SET
  numberOfItems = numberOfItems - :size
WHERE id = ? AND numberOfItems > 0;

deleteItemsAfterIndex:
DELETE FROM ListItemEntity
WHERE accountId = :accountId AND itemIndex >= :startIndex;

clearListItems:
DELETE FROM ListItemEntity
WHERE accountId = :accountId;

deleteList:
DELETE FROM ListItemEntity WHERE id = ?;
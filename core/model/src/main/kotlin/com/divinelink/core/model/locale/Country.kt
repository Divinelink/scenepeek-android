package com.divinelink.core.model.locale

import com.divinelink.core.model.R

enum class Country(
  val code: String,
  val flag: String,
  val nameRes: Int,
) {
  PALESTINE("PS", "ğŸ‡µğŸ‡¸", R.string.country_palestine),
  CANADA("CA", "ğŸ‡¨ğŸ‡¦", R.string.country_canada),
  AUSTRALIA("AU", "ğŸ‡¦ğŸ‡º", R.string.country_australia),
  GERMANY("DE", "ğŸ‡©ğŸ‡ª", R.string.country_germany),
  FRANCE("FR", "ğŸ‡«ğŸ‡·", R.string.country_france),
  ITALY("IT", "ğŸ‡®ğŸ‡¹", R.string.country_italy),
  SPAIN("ES", "ğŸ‡ªğŸ‡¸", R.string.country_spain),
  NETHERLANDS("NL", "ğŸ‡³ğŸ‡±", R.string.country_netherlands),
  BELGIUM("BE", "ğŸ‡§ğŸ‡ª", R.string.country_belgium),
  SWITZERLAND("CH", "ğŸ‡¨ğŸ‡­", R.string.country_switzerland),
  AUSTRIA("AT", "ğŸ‡¦ğŸ‡¹", R.string.country_austria),
  SWEDEN("SE", "ğŸ‡¸ğŸ‡ª", R.string.country_sweden),
  NORWAY("NO", "ğŸ‡³ğŸ‡´", R.string.country_norway),
  DENMARK("DK", "ğŸ‡©ğŸ‡°", R.string.country_denmark),
  FINLAND("FI", "ğŸ‡«ğŸ‡®", R.string.country_finland),
  ICELAND("IS", "ğŸ‡®ğŸ‡¸", R.string.country_iceland),
  IRELAND("IE", "ğŸ‡®ğŸ‡ª", R.string.country_ireland),
  PORTUGAL("PT", "ğŸ‡µğŸ‡¹", R.string.country_portugal),
  GREECE("GR", "ğŸ‡¬ğŸ‡·", R.string.country_greece),
  POLAND("PL", "ğŸ‡µğŸ‡±", R.string.country_poland),
  CZECH_REPUBLIC("CZ", "ğŸ‡¨ğŸ‡¿", R.string.country_czechia),
  HUNGARY("HU", "ğŸ‡­ğŸ‡º", R.string.country_hungary),
  SLOVAKIA("SK", "ğŸ‡¸ğŸ‡°", R.string.country_slovakia),
  SLOVENIA("SI", "ğŸ‡¸ğŸ‡®", R.string.country_slovenia),
  CROATIA("HR", "ğŸ‡­ğŸ‡·", R.string.country_croatia),
  SERBIA("RS", "ğŸ‡·ğŸ‡¸", R.string.country_serbia),
  BOSNIA_HERZEGOVINA("BA", "ğŸ‡§ğŸ‡¦", R.string.country_bosnia_herzegovina),
  MONTENEGRO("ME", "ğŸ‡²ğŸ‡ª", R.string.country_montenegro),
  ALBANIA("AL", "ğŸ‡¦ğŸ‡±", R.string.country_albania),
  BULGARIA("BG", "ğŸ‡§ğŸ‡¬", R.string.country_bulgaria),
  ROMANIA("RO", "ğŸ‡·ğŸ‡´", R.string.country_romania),
  ESTONIA("EE", "ğŸ‡ªğŸ‡ª", R.string.country_estonia),
  LATVIA("LV", "ğŸ‡±ğŸ‡»", R.string.country_latvia),
  LITHUANIA("LT", "ğŸ‡±ğŸ‡¹", R.string.country_lithuania),
  RUSSIA("RU", "ğŸ‡·ğŸ‡º", R.string.country_russia),
  UKRAINE("UA", "ğŸ‡ºğŸ‡¦", R.string.country_ukraine),
  BELARUS("BY", "ğŸ‡§ğŸ‡¾", R.string.country_belarus),
  TURKEY("TR", "ğŸ‡¹ğŸ‡·", R.string.country_turkey),
  SAUDI_ARABIA("SA", "ğŸ‡¸ğŸ‡¦", R.string.country_saudi_arabia),
  UAE("AE", "ğŸ‡¦ğŸ‡ª", R.string.country_uae),
  EGYPT("EG", "ğŸ‡ªğŸ‡¬", R.string.country_egypt),
  MOROCCO("MA", "ğŸ‡²ğŸ‡¦", R.string.country_morocco),
  SOUTH_AFRICA("ZA", "ğŸ‡¿ğŸ‡¦", R.string.country_south_africa),
  JAPAN("JP", "ğŸ‡¯ğŸ‡µ", R.string.country_japan),
  SOUTH_KOREA("KR", "ğŸ‡°ğŸ‡·", R.string.country_south_korea),
  CHINA("CN", "ğŸ‡¨ğŸ‡³", R.string.country_china),
  TAIWAN("TW", "ğŸ‡¹ğŸ‡¼", R.string.country_taiwan),
  HONG_KONG("HK", "ğŸ‡­ğŸ‡°", R.string.country_hong_kong),
  SINGAPORE("SG", "ğŸ‡¸ğŸ‡¬", R.string.country_singapore),
  MALAYSIA("MY", "ğŸ‡²ğŸ‡¾", R.string.country_malaysia),
  THAILAND("TH", "ğŸ‡¹ğŸ‡­", R.string.country_thailand),
  VIETNAM("VN", "ğŸ‡»ğŸ‡³", R.string.country_vietnam),
  PHILIPPINES("PH", "ğŸ‡µğŸ‡­", R.string.country_philippines),
  INDONESIA("ID", "ğŸ‡®ğŸ‡©", R.string.country_indonesia),
  INDIA("IN", "ğŸ‡®ğŸ‡³", R.string.country_india),
  PAKISTAN("PK", "ğŸ‡µğŸ‡°", R.string.country_pakistan),
  BANGLADESH("BD", "ğŸ‡§ğŸ‡©", R.string.country_bangladesh),
  SRI_LANKA("LK", "ğŸ‡±ğŸ‡°", R.string.country_sri_lanka),
  BRAZIL("BR", "ğŸ‡§ğŸ‡·", R.string.country_brazil),
  ARGENTINA("AR", "ğŸ‡¦ğŸ‡·", R.string.country_argentina),
  MEXICO("MX", "ğŸ‡²ğŸ‡½", R.string.country_mexico),
  CHILE("CL", "ğŸ‡¨ğŸ‡±", R.string.country_chile),
  COLOMBIA("CO", "ğŸ‡¨ğŸ‡´", R.string.country_colombia),
  PERU("PE", "ğŸ‡µğŸ‡ª", R.string.country_peru),
  VENEZUELA("VE", "ğŸ‡»ğŸ‡ª", R.string.country_venezuela),
  ECUADOR("EC", "ğŸ‡ªğŸ‡¨", R.string.country_ecuador),
  URUGUAY("UY", "ğŸ‡ºğŸ‡¾", R.string.country_uruguay),
  PARAGUAY("PY", "ğŸ‡µğŸ‡¾", R.string.country_paraguay),
  BOLIVIA("BO", "ğŸ‡§ğŸ‡´", R.string.country_bolivia),
  NEW_ZEALAND("NZ", "ğŸ‡³ğŸ‡¿", R.string.country_new_zealand),
  UNITED_KINGDOM("GB", "ğŸ‡¬ğŸ‡§", R.string.country_united_kingdom),
  UNITED_STATES("US", "ğŸ‡ºğŸ‡¸", R.string.country_united_states),
  ISRAEL("IL", "", R.string.country_israel),
  ;

  companion object {
    private val map = Country.entries.associateBy { it.code }

    fun fromCode(code: String): Country? = map[code]
  }
}
